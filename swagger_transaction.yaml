---
swagger: '2.0'
info:
  title: Bank Argent API documentation 2/2
  description: Specify possible API endpoints needed for phase two of Argent Bank project (transactions)
  version: 1.0.0
  termsOfService: http://swagger.io/terms/
host: localhost:3001
basePath: /api/v1
schemes:
    - http
paths:
    /user/profile/{accountId}/transactions:
        get:
            security:
                - Bearer: []
            tags:
                - Transactions module
            summary: Finds all transactions for the current month
            description: API for fetching have all the transactions of the current month 
            consumes:
                - 'application/json'
            produces:
                - 'application/json'
            parameters:
                - in: header
                  type: string
                  name: Authorization
                  description: Attach Bearer JWT token
                  required: true
                - name: accountId
                  in: path
                  description: Id of the account
                  required: true
                  type: string
                - name: month
                  in: query
                  description: Month of the transaction (if no value, return the current month)
                  required: false
                  type: string
                  enum:
                   - January
                   - February
                   - March
                   - April
                   - May
                   - June
                   - July
                   - August
                   - September
                   - October
                   - November
                   - December
            responses:
                '200':
                    description: current month transactions sucessfully loaded
                    schema:
                        $ref: '#/definitions/TransactionsMonthResponse'
                '400':
                    description: Invalid Fields
                '401':
                    description: User is not authorized
                '404':
                    description: Account not found
                '500':
                    description: Internal Server Error
    
    /user/profile/{accountId}/transactions/{transactionId}:
        get:
            security:
                - Bearer: []
            tags:
                - Transactions module
            summary: Get transaction by ID
            description: API for fetching one transaction details
            produces:
                - 'application/json'
            parameters:
                - in: header
                  type: string
                  name: Authorization
                  description: Attach Bearer JWT token
                  required: true
                - name: accountId
                  in: path
                  description: Id of the account
                  required: true
                  type: string
                - name: transactionId
                  in: path
                  description: Id of the transaction
                  required: true
                  type: string
                
            responses:
                '200':
                    description: Transaction sucessfully loaded
                    schema:
                        $ref: '#/definitions/TransactionResponse'
                '400':
                    description: Invalid Fields
                '401':
                    description: Access not authorized
                '404':
                    description: Transaction not found
                '500':
                    description: Internal Server Error
        put:
            security:
                - Bearer: []
            tags:
                - Transactions module
            summary: Update an existing transaction
            description: API for updating transaction's details
            produces:
                - 'application/json'
            parameters:
                - in: header
                  type: string
                  name: Authorization
                  description: Attach Bearer JWT token
                  required: true
                - name: accountId
                  in: path
                  description: Id of the account
                  required: true
                  type: string
                - name: transactionId
                  in: path
                  description: Id of the transaction
                  required: true
                  type: string
                - in: body
                  name: body
                  description: Update transaction attributes
                  required: true
                  schema:
                      $ref: '#/definitions/TransactionDetail'
            responses:
                '200':
                    description: Transaction's details sucessfully modified
                    schema:
                        $ref: '#/definitions/TransactionUpdateResponse'
                '400':
                    description: Invalid Fields
                '401':
                    description: Access not authorized
                '404':
                    description: Transaction not found
                '500':
                    description: Internal Server Error
                    
                    
securityDefinitions:
    Bearer:
        type: apiKey
        name: Authorization
        in: header
        
        
definitions:
    TransactionsMonthResponse:
      type: object
      properties:
        status:
          type: integer
          example: 200
        message:
          type: string
          format: string
          example: transactions successfully recovered
        body:
          type: object
          properties:
            transactions:
              type: array
              items:
                $ref: '#/definitions/Transaction'
          example : [
            {
            "transactionId": f8fswj*89fgdj67890pm43657uytr4ezhh2,
            "accountId": 202303tt99765gtyh6578uiop,
            "date": '2023-01-07T03:11:57.468+00:00',
            "description": Golden Sun Bakery,
            "amount": 50,
            "balance": 2187.78,
            "type": Electronic,
            "category": Food,
            "notes": Good food,
            },
            {
            "transactionId": f8fj*89fgdj67890pm43657uythhhr4e2gty786,
            "accountId": 2023039ff9765gtyh657gggg8kjo987,
            "date": '2023-01-09T03:08:57.468+00:00',
            "description": Example,
            "amount": 5900,
            "balance": 245187.9,
            "type": Electronic,
            "category": House,
            "notes": Good House,
            }
          ]
     
    TransactionResponse:
      type: object
      properties:
        status: 
          type: integer
          example: 200
        message: 
          type: string
          example: transaction sucessfully loaded
        schema:
           $ref: '#/definitions/Transaction'
    
    TransactionUpdateResponse:
      type: object
      properties:
        status: 
          type: integer
          example: 200
        message: 
          type: string
          example: Transaction's details sucessfully modified
        schema:
           $ref: '#/definitions/Transaction'
    
    Transaction:
      type: object
      properties:
        transactionId:
          type: string
          description: id of the transaction
          example: f8fjhh*89fgdj67890pm43657uytr4ez2
        accountId:
          type: string
          description: id of the account
          example: 20230399765gtyh6578uiop
        date:
          type: string
          format: date
          description: transaction date
          example: '2023-01-07T03:11:57.468+00:00'
        description:
          type: string
          description: transaction description
          example: Golden Sun Bakery
        amount:
          type: integer
          format: int64
          description: transaction amount
          example: 50
        balance:
          type: integer
          format: int64
          description: account balance after transaction
          example: 2187.79  
        type:
          type: string
          example: Electronic
          description: transaction type
        category:
          type: string
          description: transaction category
          example: Food
          enum :
            - Food
            - House
            - Car
        notes:
          type: string
          description: transaction notes
          example: Good food
        
          
        
    TransactionDetail:
      type: object
      properties:
        category:
          type: string
          description: transaction category
          example: Food
        notes:
          type: string
          description: transaction notes
          example: Good food      
      